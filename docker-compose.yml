version: '3.8'
services:
  #####################
  ### WebApp Nodejs
  #####################
  exp_api:
    restart: unless-stopped
    build: ./backend
##    Uncomment this if you want to expose app too.
    ports:
      - 3301:3301
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/backend/node_modules
    command: nodemon --verbose /usr/src/app/backend
    dns:
      - 8.8.8.8
      - 1.1.1.1
    networks:
      - exp_network

  #####################
  ### Nginx Proxy
  #####################
  exp_nginx:
    restart: unless-stopped
    image: nginx
    ports:
      - 85:85
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - exp_network
    depends_on:
      - exp_api

  exp_app:
    build: ./frontend
    ports:
      - "3302:3302"
    volumes:
      - ./frontend:/usr/src/app/frontend
      - /usr/src/app/frontend/node_modules
    environment:
      - NODE_ENV=development
    command: npm run dev
    networks:
      - exp_network

  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./backend/mongo-data:/usr/src/app/backend/mong-data
    networks:
      - exp_network
      
  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "3303:8081"
    networks:
      - exp_network
    environment:
      - ME_CONFIG_BASICAUTH=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_SITE_PORT=3303
    # links:
    #   - mongo
    depends_on:
      - mongo

# Define named volumes
volumes:
  mongo-data:
    driver: local

networks:
  exp_network: